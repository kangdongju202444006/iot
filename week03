사물인터넷 3주차
전주는 초음파 센서 커넥팅하여 거리 측정하였고
3주차에는 미세먼저 센서를 활용하여 공기중에 먼지량을 측정하였다.
미세먼지 센서는 아날로그 데이터를 사용하기에 해당 아날로그 데이터를 전압(0~1023)범위로 변환하여 표현한다.
arduino, ptyhon에서 커넥팅하여 실행해 수치를 볼 수 있었고, influxdb에서 토큰을 활용하여 숫자가아닌 gui로 누적 데이터를 볼 수 있었다.


*********python data********
import serial
from influxdb_client import InfluxDBClient
import time

serial_port = "COM5"
baud_rate = 9600
timeout = 2

#설정
influxdb_url = "http://localhost:8086"
influxdb_token = "G3ifEdYKHlY34s6XqfJ8wOzUUY3DumOMfaTZfpF34UKnWrYWwhkEZAh_WNFcO5hwSbMaJhT0-EtZaNh2jUnGZA=="
inpluxdb_org = "test"
influxdb_bucket = "dust"

#클라이언트 초기화
client = InfluxDBClient(url=influxdb_url, token=influxdb_token, org=inpluxdb_org)
write_api = client.write_api()

#시리얼 포트열기
try:
    ser = serial.Serial(serial_port, baud_rate, timeout = timeout)
    print(f"Connected to {serial_port} at {baud_rate} baud")
except:
    print("Failed to connect to serial port")
    exit()

try:
    while True:
        if ser.in_waiting > 0:
            line = ser.readline().decode('utf-8').strip()

            if "=" in line:
                key, value = line.split("=")
                try:
                    value = float(value)
                    data = f"sensor_data,device=arduino {key}={value}"
                    write_api.write(bucket=influxdb_bucket, record=data)
                    print(f"Data written to influxDB: {key}={value}")
                except ValueError:
                    print("invalid data format")
        time.sleep(1)

except KeyboardInterrupt:
    print("프로그램이 종료되었습니다.")
finally:
    ser.close()

*********arduino*******
int Vo = A0;
int V_led = 12;

float Vo_value = 0;
float Voltage = 0;
float dustDensity = 0;

void setup() {
  Serial.begin(9600);
  pinMode(V_led, OUTPUT);
  pinMode(Vo, INPUT);
}

void loop() {
  digitalWrite(V_led, LOW);
  delayMicroseconds(280);
  Vo_value = analogRead(40);
  digitalWrite(V_led,HIGH);
  delayMicroseconds(9600);

  Voltage = Vo_value * 5.0 / 1023.0;
  dustDensity = (Voltage - 0.5)/0.005;

  Serial.print("dust=" );
  Serial.println(dustDensity);

  delay(1000);
}

